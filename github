# 1. 코드 파일을 github에 제출
- ## Git으로 레포지토리 만들고 프로젝트 업로드하기

    이 문서는 Git을 사용하여 처음 레포지토리를 생성하고, 자신의 프로젝트를 GitHub에 업로드하는 방법을 단계별로 설명합니다.

    ---

    ## 1. Git 설치 및 환경 설정

    - **Git 설치**  
    Git이 설치되어 있지 않다면, [Git 다운로드 페이지](https://git-scm.com/downloads)에서 OS에 맞게 설치하세요.

    - **설치 확인**  
    터미널이나 Git Bash를 열고 아래 명령어를 입력하여 Git이 제대로 설치되었는지 확인합니다.
    ```bash
    git --version
    ```

    - **사용자 정보 설정**

    Git 사용 전, 사용자 이름과 이메일을 설정합니다.
    ```bash
    git config --global user.name "Your Name"
    git config --global user.email "your.email@example.com"
    ```

    ## 2. GitHub 계정 생성 및 레포지토리 생성
    #### 1. GitHub에 접속하여 계정을 생성합니다.
    #### 2. 로그인 후, 우측 상단의 "+" 아이콘을 클릭하고 **"New repository"** 를 선택합니다.
    #### 3. Repository 이름과 설명(선택 사항)을 입력합니다.
    #### 4. Public을을 선택합니다.
    #### 5. "Create repository" 버튼을 클릭하여 새 레포지토리를 생성합니다.

    ## 3. 로컬 프로젝트를 Git 레포지토리로 초기화
    1. 터미널을 열고 프로젝트 폴더로 이동합니다.
        ```bash
        cd /path/to/your/project
        ```
        ++ 다른 방법  
         파일 탐색기에서 자신이 연결할 프로젝트 폴더로 들어가서 주소창에 명령프롬프트(cmd) 실행.



    2. Git 레포지토리로 초기화합니다. (처음 연결할 때만 씀.)
        ```bash
        git init
        ```
    ## 4. 로컬 레포지토리와 GitHub 레포지토리 연결
    1. GitHub에서 생성한 레포지토리의 URL을 복사한 후, 터미널에서 아래 명령어로 원격 저장소를 추가합니다.
        ![image](https://raw.githubusercontent.com/2025-Tutoring-KW/image/refs/heads/main/git_2.png)
        ```bash
        git remote add origin your-repository-address
        ```
    ## 5. 파일 추가, 커밋, 푸시
    1. 파일 추가
        변경된 모든 파일을 스테이징 영역에 추가합니다.
        ```bash
        git add .
        ```
    2. 커밋 생성
        첫 커밋을 생성합니다.
        ```bash
        git commit -m "Initial commit"
        ```
    3. 현재 브랜치 확인
        현재 작업 중인 로컬 브랜치를 확인하려면:
        ```bash
        git branch
        ```
    
    1. 원격 저장소에 푸시

        * 기본 브랜치가 main이 아닌 경우:
            * 1. 기존 브랜치로 변경하기 (기존 브랜치에 main이 있을 때)

                    ```bash
                    git checkout 브랜치이름
                    ```
            * 2. 새로운 브랜치를 생성하고 변경하기 (기존 브랜치에 main이 없을 때)
                    ```bash
                    git checkout -b 새브랜치이름
                    ```
        * 만약 기본 브랜치가 main인 경우:
            ```bash
            git push  origin main
            ```
    ## 6. 이후 작업 시 기본 명령어
    - **변경사항 추가 및 커밋**
        ```bash
        git status
        ```
        ```bash
        git add .
        ```
        ```bash
        git commit -m "커밋 메시지"
        ```
    - **원격 저장소로 푸시**
        ```bash
        git push
        ```  
